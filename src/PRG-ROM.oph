; program code, mostly contains interrupt vectors and initialization code

.include "Zero.oph"

.text
.org $8000

.include "Controller.oph"
.include "Cursor.oph"
.include "Math.oph"
.include "Misc.oph"
.include "PPU.oph"
.include "Sequencer.oph"

; interrupt handlers

reset:
    sei             ; disable interrupts
    cld

    jsr disable_graphics
    jsr init_graphics
    
    `wait_vblanks 1
    
    jsr disable_graphics
    `load_frame seq
    jsr load_nametables
    jsr init_ppu
    
    jsr init_cursor
    jsr init_seq
    
    cli

    jmp main        ; main loop

irq:                ; irq/brk vector
    rti

nmi:                ; nmi vector
    sei             ; prevent interrupts
    php             ; push processor status on stack in case a branch is interrupted
    `push_registers
    jsr input
    jsr draw_cursor
    ;jsr nmi_draw_keys
    jsr reset_vram  ; reset vram on nmi or else weird things happen
    `pop_registers
    plp
    cli
    rti

main:               ; main loop
    jmp main

.advance $FFFA      ; pad the rest of our file with zeros
.word nmi           ; interrupt handlers
.word reset
.word irq